{"version":3,"sources":["config.js","RomLibrary.js","ListPage.js","ControlMapperRow.js","ControlsModal.js","FrameTimer.js","GamepadController.js","KeyboardController.js","Screen.js","utils.js","Speakers.js","Emulator.js","RunPage.js","App.js","index.js"],"names":["config","ROMS","owlia","name","description","react_default","a","createElement","href","target","url","nomolos","croom","lj65","GOOGLE_ANALYTICS_CODE","process","REACT_APP_GOOGLE_ANALYTICS_CODE","SENTRY_URI","REACT_APP_SENTRY_URI","RomLibrary","getRomInfoByHash","hash","this","load","find","rom","save","file","Promise","resolve","reject","reader","FileReader","onload","readAsBinaryString","pFileReader","then","readFile","byteString","result","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","crypto","subtle","digest","buffer","Array","from","map","b","toString","padStart","join","hashFile","_ref","savedRomInfo","localStorage","getItem","existingLibrary","JSON","parse","added","Date","now","newRomInfo","stringify","concat","setItem","delete","removeItem","filter","ListPage","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deleteRom","updateLibrary","setState","romLibrary","handleDragOver","e","preventDefault","dataTransfer","dropEffect","handleDrop","items","getAsFile","files","history","push","pathname","state","_this2","className","onDragOver","onDrop","ListGroup","keys","sort","key","Link","to","encodeURIComponent","onClick","title","Component","ControlMapperRow","playerOneButton","playerTwoButton","waitingForKey","handleClick","bind","assertThisInitialized","button","playerButtons","console","log","prevProps","prevState","gamepadButton","newButton","searchButton","gamepadConfig","buttonId","buttons","searchNewButton","prevGamepadConfig","some","b2","waitingForKeyPlayer","gamepadButtonName","type","code","value","playerGamepadId","configs","prevButton","newState","currentPromptButton","player","buttonName","GAMEPAD_ICON","KEYBOARD_ICON","ControlsModal","undefined","modified","handleKeyDown","handleGamepadButtonDown","listenForKey","controllerIcon","gamepadId","controllerIconAlt","setKeys","setGamepadConfig","removeKeyListener","promptButton","document","addEventListener","buttonInfo","playerId","slice","newConfig","assign","event","newKeys","objectSpread","defineProperty","keyCode","toConsumableArray","String","toUpperCase","removeEventListener","Modal","isOpen","toggle","ModalHeader","ModalBody","Table","src","alt","src_ControlMapperRow","Controller","BUTTON_LEFT","BUTTON_SELECT","BUTTON_RIGHT","BUTTON_UP","BUTTON_DOWN","BUTTON_A","BUTTON_B","BUTTON_START","ModalFooter","Button","outline","color","FrameTimer","onAnimationFrame","calibrating","calibrationStartTime","getTime","calibrationCurrentFrames","calibrationFrames","fps","desiredFPS","calibrationTolerance","startBodgeMode","requestAnimationFrame","running","bodgeMode","onGenerateFrame","onWriteFrame","bodgeInterval","setInterval","onBodge","calibrationDelay","_requestID","window","cancelAnimationFrame","clearInterval","GamepadController","options","disableIfGamepadEnabled","callback","self","_getPlayerNumberFromGamepad","gamepad","id","poll","gamepads","navigator","getGamepads","webkitGetGamepads","usedPlayers","gamepadIndex","previousGamepad","gamepadState","previousButtons","buttonCallback","axes","axis","previousAxis","previousButton","pressed","playerNumber","indexOf","configButtons","configButton","onButtonDown","onButtonUp","f","loadGamepadConfig","startPolling","stop","stopped","loop","KEYS","88","89","90","17","13","38","40","37","39","103","105","99","97","104","98","100","102","KeyboardController","loadKeys","handleKeyUp","handleKeyPress","SCREEN_WIDTH","SCREEN_HEIGHT","Screen","setBuffer","y","x","buf32","writeBuffer","imageData","data","set","buf8","context","putImageData","fitInParent","parent","canvas","parentNode","parentWidth","clientWidth","parentHeight","clientHeight","desiredRatio","style","width","Math","round","height","handleMouseDown","onMouseDown","scale","parseFloat","rect","getBoundingClientRect","clientX","left","clientY","top","onMouseUp","ref","initCanvas","getContext","getImageData","fillStyle","fillRect","buf","Uint8ClampedArray","Uint32Array","img","Image","toDataURL","handleError","error","errorInfo","Raven","captureException","extra","Speakers","onBufferUnderrun","writeSample","right","size","bufferSize","enq","onaudioprocess","outputBuffer","getChannelData","samples","deqN","j","RingBuffer","AudioContext","audioCtx","scriptNode","createScriptProcessor","connect","destination","disconnect","close","catch","Emulator","start","frameTimer","speakers","fpsInterval","nes","getFPS","src_Screen_0","screen","frame","zapperMove","zapperFireDown","zapperFireUp","_this3","actualSize","desiredSize","paused","NES","onFrame","onStatusUpdate","onAudioSample","wrap","gamepadController","buttonDown","buttonUp","gamepadPolling","keyboardController","loadROM","romData","RunPage","match","params","slug","isLocalROM","test","romHash","split","romInfo","romName","localROMData","handleLoaded","currentRequest","path","handleProgress","req","XMLHttpRequest","open","overrideMimeType","status","responseText","Error","statusText","onerror","onprogress","send","loadBinary","err","message","location","lengthComputable","loadedPercent","loaded","total","loading","handlePauseResume","layout","navbarHeight","getComputedStyle","navbar","screenContainer","innerHeight","emulator","toggleControlsModal","controlsModalOpen","el","disabled","Progress","position","src_Emulator","src_ControlsModal","abort","App","recordPageview","GoogleAnalytics","pageview","initialize","BrowserRouter","Route","exact","component","render","install","ReactDOM","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.e7c2cb55.chunk.js","sourcesContent":["import React from \"react\";\n\nconst config = {\n  ROMS: {\n    owlia: {\n      name: \"The Legends of Owlia\",\n      description: (\n        <span>\n          <a\n            href=\"http://www.gradualgames.com/p/the-legends-of-owlia_1.html\"\n            target=\"_blank\"\n          >\n            Owlia by Gradual Games\n          </a>{\" \"}\n          /{\" \"}\n          <a href=\"http://www.infiniteneslives.com/owlia.php\" target=\"_blank\">\n            Buy the cartridge\n          </a>\n        </span>\n      ),\n      url: \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/owlia.nes\"\n    },\n    nomolos: {\n      name: \"Nomolos: Storming the Catsle\",\n      description: (\n        <span>\n          <a\n            href=\"http://www.gradualgames.com/p/nomolos-storming-catsle.html\"\n            target=\"_blank\"\n          >\n            Monolos by Gradual Games\n          </a>{\" \"}\n          /{\" \"}\n          <a href=\"http://www.infiniteneslives.com/nomolos.php\" target=\"_blank\">\n            Buy the cartridge\n          </a>\n        </span>\n      ),\n      url: \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/nomolos.nes\"\n    },\n    croom: {\n      name: \"Concentration Room\",\n      description: (\n        <span>\n          <a href=\"http://www.pineight.com/croom/README\" target=\"_blank\">\n            Concentration Room\n          </a>{\" \"}\n          by Damian Yerrick\n        </span>\n      ),\n      url:\n        \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/croom/croom.nes\"\n    },\n    lj65: {\n      name: \"LJ65\",\n      description: (\n        <span>\n          <a href=\"http://harddrop.com/wiki/LJ65\" target=\"_blank\">\n            Concentration Room\n          </a>{\" \"}\n          by Damian Yerrick\n        </span>\n      ),\n      url: \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/lj65/lj65.nes\"\n    }\n  },\n  GOOGLE_ANALYTICS_CODE: process.env.REACT_APP_GOOGLE_ANALYTICS_CODE,\n  SENTRY_URI: process.env.REACT_APP_SENTRY_URI\n};\n\nexport default config;\n","const pFileReader = function(file) {\n  return new Promise((resolve, reject) => {\n    var reader = new FileReader();\n    reader.onload = resolve;\n    reader.readAsBinaryString(file);\n  });\n};\n\nconst hashFile = function(byteString) {\n  const asHex = buffer => {\n    return Array.from(new Uint8Array(buffer))\n      .map(b => b.toString(16).padStart(2, \"0\"))\n      .join(\"\");\n  };\n\n  const ab = new ArrayBuffer(byteString.length);\n  var ia = new Uint8Array(ab);\n\n  for (var i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n\n  return crypto.subtle.digest(\"SHA-1\", ab).then(asHex);\n};\n\nconst RomLibrary = {\n  getRomInfoByHash: function(hash) {\n    return this.load().find(rom => rom.hash === hash);\n  },\n  save: function(file) {\n    return pFileReader(file)\n      .then(function(readFile) {\n        const byteString = readFile.target.result;\n        return hashFile(byteString).then(hash => {\n          return { hash, byteString };\n        });\n      })\n      .then(({ hash, byteString }) => {\n        const savedRomInfo = localStorage.getItem(\"savedRomInfo\");\n        const existingLibrary = savedRomInfo ? JSON.parse(savedRomInfo) : [];\n\n        const rom = {\n          name: file.name,\n          hash: hash,\n          added: Date.now()\n        };\n\n        const newRomInfo = JSON.stringify(existingLibrary.concat([rom]));\n\n        localStorage.setItem(\"savedRomInfo\", newRomInfo);\n        localStorage.setItem(\"blob-\" + hash, byteString);\n\n        return rom;\n      });\n  },\n  load: function() {\n    const localData = localStorage.getItem(\"savedRomInfo\");\n    if (!localData) return [];\n    const savedRomInfo = JSON.parse(localStorage.getItem(\"savedRomInfo\"));\n    return savedRomInfo || [];\n  },\n  delete: function(hash) {\n    const existingLibrary = this.load();\n    localStorage.removeItem(\"blob-\" + hash);\n    localStorage.setItem(\n      \"savedRomInfo\",\n      JSON.stringify(existingLibrary.filter(rom => rom.hash !== hash))\n    );\n  }\n};\n\nexport default RomLibrary;\n","import React, { Component } from \"react\";\nimport \"./ListPage.css\";\nimport { ListGroup, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport config from \"./config\";\n\nimport RomLibrary from \"./RomLibrary\";\n\nclass ListPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      romLibrary: RomLibrary.load()\n    };\n  }\n  render() {\n    return (\n      <div\n        className=\"container ListPage my-4\"\n        onDragOver={this.handleDragOver}\n        onDrop={this.handleDrop}\n      >\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8\">\n            <header className=\"mb-4\">\n              <h1 className=\"mb-3\">JSNES</h1>\n              <p>\n                A JavaScript NES emulator.{\" \"}\n                <a href=\"https://github.com/bfirsh/jsnes\">Source on GitHub.</a>\n              </p>\n            </header>\n\n            <ListGroup className=\"mb-4\">\n              {Object.keys(config.ROMS)\n                .sort()\n                .map(key => (\n                  <Link\n                    key={key}\n                    to={\"/run/\" + encodeURIComponent(key)}\n                    className=\"list-group-item\"\n                  >\n                    {config.ROMS[key][\"name\"]}\n                    <span className=\"float-right\">&rsaquo;</span>\n                  </Link>\n                ))}\n            </ListGroup>\n\n            <p>\n              Or, drag and drop a ROM file onto the page to play it. (Google may\n              help you find them.)\n            </p>\n\n            {this.state.romLibrary.length > 0 ? (\n              <div>\n                <p>Previously played:</p>\n\n                <ListGroup className=\"mb-4\">\n                  {this.state.romLibrary\n                    .sort((a, b) => new Date(b.added) - new Date(a.added))\n                    .map(rom => (\n                      <Link\n                        key={rom.hash}\n                        to={\"run/local-\" + rom.hash}\n                        className=\"list-group-item\"\n                      >\n                        {rom.name}\n                        <a\n                          onClick={e => {\n                            e.preventDefault();\n                            this.deleteRom(rom.hash);\n                          }}\n                          className=\"delete\"\n                          title=\"Delete\"\n                        >\n                          &times;\n                        </a>\n                        <span className=\"float-right\">&rsaquo;</span>\n                      </Link>\n                    ))}\n                </ListGroup>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  deleteRom = hash => {\n    RomLibrary.delete(hash);\n    this.updateLibrary();\n  };\n\n  updateLibrary = () => {\n    this.setState({ romLibrary: RomLibrary.load() });\n  };\n\n  handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"copy\";\n  };\n\n  handleDrop = e => {\n    e.preventDefault();\n\n    const file = e.dataTransfer.items\n      ? e.dataTransfer.items[0].getAsFile()\n      : e.dataTransfer.files[0];\n\n    RomLibrary.save(file).then(rom => {\n      this.updateLibrary();\n      this.props.history.push({ pathname: \"run/local-\" + rom.hash });\n    });\n  };\n}\n\nexport default ListPage;\n","import React, { Component } from \"react\";\n\nclass ControlMapperRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerOneButton: \"\",\n      playerTwoButton: \"\",\n      waitingForKey: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    var keys = this.props.keys;\n    var button = this.props.button;\n    var playerButtons = [];\n    for (var key in keys) {\n      if (keys[key][0] === 1 && keys[key][1] === button) {\n        playerButtons[0] = keys[key][2];\n        console.log(playerButtons[0]);\n      } else if (keys[key][0] === 2 && keys[key][1] === button) {\n        playerButtons[1] = keys[key][2];\n      }\n    }\n    this.setState({\n      playerOneButton: playerButtons[0],\n      playerTwoButton: playerButtons[1]\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    var keys = this.props.keys;\n    var button = this.props.button;\n    var playerButtons = [];\n    var gamepadButton;\n    var newButton;\n\n    for (var key in keys) {\n      if (keys[key][0] === 1 && keys[key][1] === button) {\n        playerButtons[0] = keys[key][2];\n        console.log(playerButtons[0]);\n      } else if (keys[key][0] === 2 && keys[key][1] === button) {\n        playerButtons[1] = keys[key][2];\n      }\n    }\n\n    var searchButton = (gamepadConfig, buttonId) => {\n      return gamepadConfig.buttons.filter(b => b.buttonId === buttonId)[0];\n    };\n\n    var searchNewButton = (prevGamepadConfig, gamepadConfig) => {\n      return gamepadConfig.buttons.filter(b => {\n        return (\n          !prevGamepadConfig ||\n          !prevGamepadConfig.buttons.some(b2 => b2.buttonId === b.buttonId)\n        );\n      })[0];\n    };\n\n    var waitingForKey = 0;\n    var waitingForKeyPlayer = 0;\n\n    var gamepadButtonName = gamepadButton => {\n      if (gamepadButton.type === \"button\") return \"Btn-\" + gamepadButton.code;\n      if (gamepadButton.type === \"axis\")\n        return \"Axis-\" + gamepadButton.code + \" \" + gamepadButton.value;\n    };\n\n    if (this.props.gamepadConfig && this.props.gamepadConfig.playerGamepadId) {\n      const playerGamepadId = this.props.gamepadConfig.playerGamepadId;\n      if (playerGamepadId[0]) {\n        playerButtons[0] = \"\";\n        gamepadButton = searchButton(\n          this.props.gamepadConfig.configs[playerGamepadId[0]],\n          button\n        );\n        newButton = searchNewButton(\n          prevProps.gamepadConfig.configs[playerGamepadId[0]],\n          this.props.gamepadConfig.configs[playerGamepadId[0]]\n        );\n        if (gamepadButton) {\n          playerButtons[0] = gamepadButtonName(gamepadButton);\n        } else {\n          if (newButton && newButton.buttonId === this.props.prevButton) {\n            if (!waitingForKey) {\n              waitingForKey = 1;\n              waitingForKeyPlayer = 1;\n            }\n          }\n        }\n      }\n\n      if (playerGamepadId[1]) {\n        playerButtons[1] = \"\";\n        gamepadButton = searchButton(\n          this.props.gamepadConfig.configs[playerGamepadId[1]],\n          button\n        );\n        newButton = searchNewButton(\n          prevProps.gamepadConfig.configs[playerGamepadId[1]],\n          this.props.gamepadConfig.configs[playerGamepadId[1]]\n        );\n        if (gamepadButton) {\n          playerButtons[1] = gamepadButtonName(gamepadButton);\n        } else {\n          if (newButton && newButton.buttonId === this.props.prevButton) {\n            if (!waitingForKey) {\n              waitingForKey = 2;\n              waitingForKeyPlayer = 2;\n            }\n          }\n        }\n      }\n    }\n\n    var newState = {};\n\n    if (waitingForKey) {\n      this.props.handleClick([waitingForKeyPlayer, this.props.button]);\n    }\n    // Prevent setState being called repeatedly\n    if (\n      prevState.playerOneButton !== playerButtons[0] ||\n      prevState.playerTwoButton !== playerButtons[1]\n    ) {\n      newState.playerOneButton = playerButtons[0];\n      newState.playerTwoButton = playerButtons[1];\n    }\n\n    if (waitingForKey) {\n      newState.waitingForKey = waitingForKey;\n    } else if (prevState.waitingForKey === 1) {\n      if (this.props.currentPromptButton !== this.props.button) {\n        newState.waitingForKey = 0;\n      }\n    } else if (prevState.waitingForKey === 2) {\n      if (this.props.currentPromptButton !== this.props.button) {\n        newState.waitingForKey = 0;\n      }\n    }\n\n    if (Object.keys(newState).length > 0) {\n      this.setState(newState);\n    }\n  }\n\n  handleClick(player) {\n    this.props.handleClick([player, this.props.button]);\n    this.setState({\n      waitingForKey: player\n    });\n  }\n\n  render() {\n    const waitingText = \"Press key or button...\";\n    return (\n      <tr>\n        <td>{this.props.buttonName}</td>\n        <td onClick={() => this.handleClick(1)}>\n          {this.state.waitingForKey === 1\n            ? waitingText\n            : this.state.playerOneButton}\n        </td>\n        <td onClick={() => this.handleClick(2)}>\n          {this.state.waitingForKey === 2\n            ? waitingText\n            : this.state.playerTwoButton}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default ControlMapperRow;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table\n} from \"reactstrap\";\nimport { Controller } from \"jsnes\";\nimport ControlMapperRow from \"./ControlMapperRow\";\n\nconst GAMEPAD_ICON = \"../img/nes_controller.png\";\nconst KEYBOARD_ICON = \"../img/keyboard.png\";\n\nclass ControlsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gamepadConfig: props.gamepadConfig,\n      keys: props.keys,\n      button: undefined,\n      modified: false\n    };\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleGamepadButtonDown = this.handleGamepadButtonDown.bind(this);\n    this.listenForKey = this.listenForKey.bind(this);\n\n    this.state.gamepadConfig = this.state.gamepadConfig || {};\n    this.state.gamepadConfig.playerGamepadId = this.state.gamepadConfig\n      .playerGamepadId || [null, null];\n    this.state.gamepadConfig.configs = this.state.gamepadConfig.configs || {};\n\n    this.state.controllerIcon = this.state.gamepadConfig.playerGamepadId.map(\n      gamepadId => (gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON)\n    );\n    this.state.controllerIconAlt = this.state.gamepadConfig.playerGamepadId.map(\n      gamepadId => (gamepadId ? \"gamepad\" : \"keyboard\")\n    );\n    this.state.currentPromptButton = -1;\n  }\n\n  componentWillUnmount() {\n    if (this.state.modified) {\n      this.props.setKeys(this.state.keys);\n      this.props.setGamepadConfig(this.state.gamepadConfig);\n    }\n    this.removeKeyListener();\n  }\n\n  listenForKey(button) {\n    var currentPromptButton = button[1];\n\n    this.removeKeyListener();\n    this.setState({ button, currentPromptButton });\n    this.props.promptButton(this.handleGamepadButtonDown);\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleGamepadButtonDown(buttonInfo) {\n    this.removeKeyListener();\n\n    var button = this.state.button;\n\n    const playerId = button[0];\n    const buttonId = button[1];\n\n    const gamepadId = buttonInfo.gamepadId;\n    const gamepadConfig = this.state.gamepadConfig;\n\n    // link player to gamepad\n    const playerGamepadId = gamepadConfig.playerGamepadId.slice(0);\n    const newConfig = {};\n\n    playerGamepadId[playerId - 1] = gamepadId;\n\n    const rejectButtonId = b => {\n      return b.buttonId !== buttonId;\n    };\n\n    const newButton = {\n      code: buttonInfo.code,\n      type: buttonInfo.type,\n      buttonId: buttonId,\n      value: buttonInfo.value\n    };\n    newConfig[gamepadId] = {\n      buttons: (gamepadConfig.configs[gamepadId] || { buttons: [] }).buttons\n        .filter(rejectButtonId)\n        .concat([newButton])\n    };\n\n    const configs = Object.assign({}, gamepadConfig.configs, newConfig);\n\n    this.setState({\n      gamepadConfig: {\n        configs: configs,\n        playerGamepadId: playerGamepadId\n      },\n      currentPromptButton: -1,\n      controllerIcon: playerGamepadId.map(gamepadId =>\n        gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON\n      ),\n      modified: true\n    });\n  }\n\n  handleKeyDown(event) {\n    this.removeKeyListener();\n\n    var button = this.state.button;\n    var keys = this.state.keys;\n    var newKeys = {};\n    for (var key in keys) {\n      if (keys[key][0] !== button[0] || keys[key][1] !== button[1]) {\n        newKeys[key] = keys[key];\n      }\n    }\n\n    const playerGamepadId = this.state.gamepadConfig.playerGamepadId.slice(0);\n    const playerId = button[0];\n    playerGamepadId[playerId - 1] = null;\n\n    this.setState({\n      keys: {\n        ...newKeys,\n        [event.keyCode]: [\n          ...button.slice(0, 2),\n          event.key.length > 1 ? event.key : String(event.key).toUpperCase()\n        ]\n      },\n      button: undefined,\n      gamepadConfig: {\n        configs: this.state.gamepadConfig.configs,\n        playerGamepadId: playerGamepadId\n      },\n      currentPromptButton: -1,\n      controllerIcon: playerGamepadId.map(gamepadId =>\n        gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON\n      ),\n      controllerIconAlt: playerGamepadId.map(gamepadId =>\n        gamepadId ? \"gamepad\" : \"keyboard\"\n      ),\n      modified: true\n    });\n  }\n\n  removeKeyListener() {\n    this.props.promptButton(null);\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n        toggle={this.props.toggle}\n        className=\"ControlsModal\"\n      >\n        <ModalHeader toggle={this.props.toggle}>Controls</ModalHeader>\n        <ModalBody>\n          <Table>\n            <thead>\n              <tr>\n                <th>Button</th>\n                <th>\n                  Player 1\n                  <img\n                    className=\"controller-icon\"\n                    src={this.state.controllerIcon[0]}\n                    alt={this.state.controllerIconAlt[0]}\n                  />\n                </th>\n                <th>\n                  Player 2\n                  <img\n                    className=\"controller-icon\"\n                    src={this.state.controllerIcon[1]}\n                    alt={this.state.controllerIconAlt[1]}\n                  />\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <ControlMapperRow\n                buttonName=\"Left\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_LEFT}\n                prevButton={Controller.BUTTON_SELECT}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Right\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_RIGHT}\n                prevButton={Controller.BUTTON_LEFT}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Up\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_UP}\n                prevButton={Controller.BUTTON_RIGHT}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Down\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_DOWN}\n                prevButton={Controller.BUTTON_UP}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"A\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_A}\n                prevButton={Controller.BUTTON_DOWN}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"B\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_B}\n                prevButton={Controller.BUTTON_A}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Start\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_START}\n                prevButton={Controller.BUTTON_B}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Select\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_SELECT}\n                prevButton={Controller.BUTTON_START}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n            </tbody>\n          </Table>\n        </ModalBody>\n        <ModalFooter>\n          <Button outline color=\"primary\" onClick={this.props.toggle}>\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nexport default ControlsModal;\n","// FrameTimer is two timers: one which triggers at 60 FPS, and the other which\n// triggers whenever there is an animation frame.\n//\n// Normally, the animation frame is 60 FPS, but if it isn't, we need to\n// bodge it by setting up another timer.\n//\n// Why not just use the bodge all the time? If the animation frame is 60 FPS,\n// then it is a much more accurate timer than setInterval. Also, two timers\n// will sometimes be out of sync, causing missed frames.\nexport default class FrameTimer {\n  constructor(props) {\n    // Run at 60 FPS\n    this.onGenerateFrame = props.onGenerateFrame;\n    // Run on animation frame\n    this.onWriteFrame = props.onWriteFrame;\n\n    // Whether to fire events or not\n    this.running = false;\n\n    // Bodge mode and calibration\n    this.bodgeMode = false;\n\n    // Calibration config\n    this.desiredFPS = 60;\n    this.calibrationDelay = 200; // time to wait before starting\n    this.calibrationFrames = 10; // number of frames to calibrate with\n    this.calibrationTolerance = 5; // +/- desired FPS to consider correct\n\n    // Calibration state\n    this.calibrating = false;\n    this.calibrationStartTime = null;\n    this.calibrationCurrentFrames = null;\n\n    // FIXME: disable bodge mode entirely. it's not really working.\n    // if (window.requestAnimationFrame) {\n    //   // wait a sec for it to settle down\n    //   setTimeout(() => {\n    //     this.calibrating = true;\n    //   }, this.calibrationDelay);\n    // } else {\n    //   console.log(\"requestAnimationFrame is not supported\");\n    // }\n  }\n\n  start() {\n    this.running = true;\n    this.requestAnimationFrame();\n    if (this.bodgeMode) this.startBodgeMode();\n  }\n\n  stop() {\n    this.running = false;\n    if (this._requestID) window.cancelAnimationFrame(this._requestID);\n    if (this.bodgeInterval) clearInterval(this.bodgeInterval);\n  }\n\n  requestAnimationFrame() {\n    this._requestID = window.requestAnimationFrame(this.onAnimationFrame);\n  }\n\n  onAnimationFrame = () => {\n    if (this.calibrating) {\n      if (this.calibrationStartTime === null) {\n        this.calibrationStartTime = new Date().getTime();\n        this.calibrationCurrentFrames = 0;\n      } else {\n        this.calibrationCurrentFrames += 1;\n      }\n\n      // Calibration complete!\n      if (this.calibrationCurrentFrames === this.calibrationFrames) {\n        this.calibrating = false;\n\n        var now = new Date().getTime();\n        var delta = now - this.calibrationStartTime;\n        var fps = 1000 / (delta / this.calibrationFrames);\n\n        if (\n          fps <= this.desiredFPS - this.calibrationTolerance ||\n          fps >= this.desiredFPS + this.calibrationTolerance\n        ) {\n          console.log(\n            `Enabling bodge mode. (Desired FPS is ${\n              this.desiredFPS\n            }, actual FPS is ${fps})`\n          );\n          this.startBodgeMode();\n        }\n      }\n    }\n\n    this.requestAnimationFrame();\n\n    if (this.running) {\n      if (!this.bodgeMode) {\n        this.onGenerateFrame();\n      }\n      this.onWriteFrame();\n    }\n  };\n\n  startBodgeMode = () => {\n    this.bodgeMode = true;\n    this.bodgeInterval = setInterval(this.onBodge, 1000 / this.desiredFPS);\n  };\n\n  onBodge = () => {\n    if (this.running) {\n      this.onGenerateFrame();\n    }\n  };\n}\n","export default class GamepadController {\n  constructor(options) {\n    this.onButtonDown = options.onButtonDown;\n    this.onButtonUp = options.onButtonUp;\n    this.gamepadState = [];\n    this.buttonCallback = null;\n  }\n\n  disableIfGamepadEnabled = callback => {\n    var self = this;\n    return (playerId, buttonId) => {\n      if (!self.gamepadConfig) {\n        return callback(playerId, buttonId);\n      }\n\n      var playerGamepadId = self.gamepadConfig.playerGamepadId;\n      if (!playerGamepadId || !playerGamepadId[playerId - 1]) {\n        // allow callback only if player is not associated to any gamepad\n        return callback(playerId, buttonId);\n      }\n    };\n  };\n\n  _getPlayerNumberFromGamepad = gamepad => {\n    if (this.gamepadConfig.playerGamepadId[0] === gamepad.id) {\n      return 1;\n    }\n\n    if (this.gamepadConfig.playerGamepadId[1] === gamepad.id) {\n      return 2;\n    }\n\n    return 1;\n  };\n\n  poll = () => {\n    const gamepads = navigator.getGamepads\n      ? navigator.getGamepads()\n      : navigator.webkitGetGamepads();\n\n    const usedPlayers = [];\n\n    for (let gamepadIndex = 0; gamepadIndex < gamepads.length; gamepadIndex++) {\n      const gamepad = gamepads[gamepadIndex];\n      const previousGamepad = this.gamepadState[gamepadIndex];\n\n      if (!gamepad) {\n        continue;\n      }\n\n      if (!previousGamepad) {\n        this.gamepadState[gamepadIndex] = gamepad;\n        continue;\n      }\n\n      const buttons = gamepad.buttons;\n      const previousButtons = previousGamepad.buttons;\n\n      if (this.buttonCallback) {\n        for (let code = 0; code < gamepad.axes.length; code++) {\n          const axis = gamepad.axes[code];\n          const previousAxis = previousGamepad.axes[code];\n\n          if (axis === -1 && previousAxis !== -1) {\n            this.buttonCallback({\n              gamepadId: gamepad.id,\n              type: \"axis\",\n              code: code,\n              value: axis\n            });\n          }\n\n          if (axis === 1 && previousAxis !== 1) {\n            this.buttonCallback({\n              gamepadId: gamepad.id,\n              type: \"axis\",\n              code: code,\n              value: axis\n            });\n          }\n        }\n\n        for (let code = 0; code < buttons.length; code++) {\n          const button = buttons[code];\n          const previousButton = previousButtons[code];\n          if (button.pressed && !previousButton.pressed) {\n            this.buttonCallback({\n              gamepadId: gamepad.id,\n              type: \"button\",\n              code: code\n            });\n          }\n        }\n      } else if (this.gamepadConfig) {\n        let playerNumber = this._getPlayerNumberFromGamepad(gamepad);\n        if (usedPlayers.length < 2) {\n          if (usedPlayers.indexOf(playerNumber) !== -1) {\n            playerNumber++;\n            if (playerNumber > 2) playerNumber = 1;\n          }\n          usedPlayers.push(playerNumber);\n\n          if (this.gamepadConfig.configs[gamepad.id]) {\n            const configButtons = this.gamepadConfig.configs[gamepad.id]\n              .buttons;\n\n            for (let i = 0; i < configButtons.length; i++) {\n              const configButton = configButtons[i];\n              if (configButton.type === \"button\") {\n                const code = configButton.code;\n                const button = buttons[code];\n                const previousButton = previousButtons[code];\n\n                if (button.pressed && !previousButton.pressed) {\n                  this.onButtonDown(playerNumber, configButton.buttonId);\n                } else if (!button.pressed && previousButton.pressed) {\n                  this.onButtonUp(playerNumber, configButton.buttonId);\n                }\n              } else if (configButton.type === \"axis\") {\n                const code = configButton.code;\n                const axis = gamepad.axes[code];\n                const previousAxis = previousGamepad.axes[code];\n\n                if (\n                  axis === configButton.value &&\n                  previousAxis !== configButton.value\n                ) {\n                  this.onButtonDown(playerNumber, configButton.buttonId);\n                }\n\n                if (\n                  axis !== configButton.value &&\n                  previousAxis === configButton.value\n                ) {\n                  this.onButtonUp(playerNumber, configButton.buttonId);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      this.gamepadState[gamepadIndex] = {\n        buttons: buttons.map(b => {\n          return { pressed: b.pressed };\n        }),\n        axes: gamepad.axes.slice(0)\n      };\n    }\n  };\n\n  promptButton = f => {\n    if (!f) {\n      this.buttonCallback = f;\n    } else {\n      this.buttonCallback = buttonInfo => {\n        this.buttonCallback = null;\n        f(buttonInfo);\n      };\n    }\n  };\n\n  loadGamepadConfig = () => {\n    var gamepadConfig;\n    try {\n      gamepadConfig = localStorage.getItem(\"gamepadConfig\");\n      if (gamepadConfig) {\n        gamepadConfig = JSON.parse(gamepadConfig);\n      }\n    } catch (e) {\n      console.log(\"Failed to get gamepadConfig from localStorage.\", e);\n    }\n\n    this.gamepadConfig = gamepadConfig;\n  };\n\n  setGamepadConfig = gamepadConfig => {\n    try {\n      localStorage.setItem(\"gamepadConfig\", JSON.stringify(gamepadConfig));\n      this.gamepadConfig = gamepadConfig;\n    } catch (e) {\n      console.log(\"Failed to set gamepadConfig in localStorage\");\n    }\n  };\n\n  startPolling = () => {\n    if (!(navigator.getGamepads || navigator.webkitGetGamepads)) {\n      return { stop: () => {} };\n    }\n\n    let stopped = false;\n    const loop = () => {\n      if (stopped) return;\n\n      this.poll();\n      requestAnimationFrame(loop);\n    };\n    requestAnimationFrame(loop);\n\n    return {\n      stop: () => {\n        stopped = true;\n      }\n    };\n  };\n}\n","import { Controller } from \"jsnes\";\n\n// Mapping keyboard code to [controller, button]\nconst KEYS = {\n  88: [1, Controller.BUTTON_A, \"X\"], // X\n  89: [1, Controller.BUTTON_B, \"Y\"], // Y (Central European keyboard)\n  90: [1, Controller.BUTTON_B, \"Z\"], // Z\n  17: [1, Controller.BUTTON_SELECT, \"Right Ctrl\"], // Right Ctrl\n  13: [1, Controller.BUTTON_START, \"Enter\"], // Enter\n  38: [1, Controller.BUTTON_UP, \"Up\"], // Up\n  40: [1, Controller.BUTTON_DOWN, \"Down\"], // Down\n  37: [1, Controller.BUTTON_LEFT, \"Left\"], // Left\n  39: [1, Controller.BUTTON_RIGHT, \"Right\"], // Right\n  103: [2, Controller.BUTTON_A, \"Num-7\"], // Num-7\n  105: [2, Controller.BUTTON_B, \"Num-9\"], // Num-9\n  99: [2, Controller.BUTTON_SELECT, \"Num-3\"], // Num-3\n  97: [2, Controller.BUTTON_START, \"Num-1\"], // Num-1\n  104: [2, Controller.BUTTON_UP, \"Num-8\"], // Num-8\n  98: [2, Controller.BUTTON_DOWN, \"Num-2\"], // Num-2\n  100: [2, Controller.BUTTON_LEFT, \"Num-4\"], // Num-4\n  102: [2, Controller.BUTTON_RIGHT, \"Num-6\"] // Num-6\n};\n\nexport default class KeyboardController {\n  constructor(options) {\n    this.onButtonDown = options.onButtonDown;\n    this.onButtonUp = options.onButtonUp;\n  }\n\n  loadKeys = () => {\n    var keys;\n    try {\n      keys = localStorage.getItem(\"keys\");\n      if (keys) {\n        keys = JSON.parse(keys);\n      }\n    } catch (e) {\n      console.log(\"Failed to get keys from localStorage.\", e);\n    }\n\n    this.keys = keys || KEYS;\n  };\n\n  setKeys = newKeys => {\n    try {\n      localStorage.setItem(\"keys\", JSON.stringify(newKeys));\n      this.keys = newKeys;\n    } catch (e) {\n      console.log(\"Failed to set keys in localStorage\");\n    }\n  };\n\n  handleKeyDown = e => {\n    var key = this.keys[e.keyCode];\n    if (key) {\n      this.onButtonDown(key[0], key[1]);\n      e.preventDefault();\n    }\n  };\n\n  handleKeyUp = e => {\n    var key = this.keys[e.keyCode];\n    if (key) {\n      this.onButtonUp(key[0], key[1]);\n      e.preventDefault();\n    }\n  };\n\n  handleKeyPress = e => {\n    e.preventDefault();\n  };\n}\n","import React, { Component } from \"react\";\nimport \"./Screen.css\";\n\nconst SCREEN_WIDTH = 256;\nconst SCREEN_HEIGHT = 240;\n\nclass Screen extends Component {\n  render() {\n    return (\n      <canvas\n        className=\"Screen\"\n        width={SCREEN_WIDTH}\n        height={SCREEN_HEIGHT}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.props.onMouseUp}\n        ref={canvas => {\n          this.canvas = canvas;\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.initCanvas();\n  }\n\n  componentDidUpdate() {\n    this.initCanvas();\n  }\n\n  initCanvas() {\n    this.context = this.canvas.getContext(\"2d\");\n    this.imageData = this.context.getImageData(\n      0,\n      0,\n      SCREEN_WIDTH,\n      SCREEN_HEIGHT\n    );\n\n    this.context.fillStyle = \"black\";\n    // set alpha to opaque\n    this.context.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n\n    // buffer to write on next animation frame\n    this.buf = new ArrayBuffer(this.imageData.data.length);\n    // Get the canvas buffer in 8bit and 32bit\n    this.buf8 = new Uint8ClampedArray(this.buf);\n    this.buf32 = new Uint32Array(this.buf);\n\n    // Set alpha\n    for (var i = 0; i < this.buf32.length; ++i) {\n      this.buf32[i] = 0xff000000;\n    }\n  }\n\n  setBuffer = buffer => {\n    var i = 0;\n    for (var y = 0; y < SCREEN_HEIGHT; ++y) {\n      for (var x = 0; x < SCREEN_WIDTH; ++x) {\n        i = y * 256 + x;\n        // Convert pixel from NES BGR to canvas ABGR\n        this.buf32[i] = 0xff000000 | buffer[i]; // Full alpha\n      }\n    }\n  };\n\n  writeBuffer = () => {\n    this.imageData.data.set(this.buf8);\n    this.context.putImageData(this.imageData, 0, 0);\n  };\n\n  fitInParent = () => {\n    let parent = this.canvas.parentNode;\n    // @ts-ignore\n    let parentWidth = parent.clientWidth;\n    // @ts-ignore\n    let parentHeight = parent.clientHeight;\n    let parentRatio = parentWidth / parentHeight;\n    let desiredRatio = SCREEN_WIDTH / SCREEN_HEIGHT;\n    if (desiredRatio < parentRatio) {\n      this.canvas.style.width = `${Math.round(parentHeight * desiredRatio)}px`;\n      this.canvas.style.height = `${parentHeight}px`;\n    } else {\n      this.canvas.style.width = `${parentWidth}px`;\n      this.canvas.style.height = `${Math.round(parentWidth / desiredRatio)}px`;\n    }\n  };\n\n  screenshot() {\n    var img = new Image();\n    img.src = this.canvas.toDataURL(\"image/png\");\n    return img;\n  }\n\n  handleMouseDown = e => {\n    if (!this.props.onMouseDown) return;\n    // Make coordinates unscaled\n    let scale = SCREEN_WIDTH / parseFloat(this.canvas.style.width);\n    let rect = this.canvas.getBoundingClientRect();\n    let x = Math.round((e.clientX - rect.left) * scale);\n    let y = Math.round((e.clientY - rect.top) * scale);\n    this.props.onMouseDown(x, y);\n  };\n}\n\nexport default Screen;\n","import Raven from \"raven-js\";\n\nexport const handleError = (error, errorInfo) => {\n  console.error(error);\n  Raven.captureException(error, { extra: errorInfo });\n};\n","import RingBuffer from \"ringbufferjs\";\nimport { handleError } from \"./utils\";\n\nexport default class Speakers {\n  constructor({ onBufferUnderrun }) {\n    this.onBufferUnderrun = onBufferUnderrun;\n    this.bufferSize = 8192;\n    this.buffer = new RingBuffer(this.bufferSize * 2);\n  }\n\n  start() {\n    // Audio is not supported\n    if (!window.AudioContext) {\n      return;\n    }\n    this.audioCtx = new window.AudioContext();\n    this.scriptNode = this.audioCtx.createScriptProcessor(1024, 0, 2);\n    this.scriptNode.onaudioprocess = this.onaudioprocess;\n    this.scriptNode.connect(this.audioCtx.destination);\n  }\n\n  stop() {\n    if (this.scriptNode) {\n      this.scriptNode.disconnect(this.audioCtx.destination);\n      this.scriptNode.onaudioprocess = null;\n      this.scriptNode = null;\n    }\n    if (this.audioCtx) {\n      this.audioCtx.close().catch(handleError);\n      this.audioCtx = null;\n    }\n  }\n\n  writeSample = (left, right) => {\n    if (this.buffer.size() / 2 >= this.bufferSize) {\n      console.log(`Buffer overrun`);\n    }\n    this.buffer.enq(left);\n    this.buffer.enq(right);\n  };\n\n  onaudioprocess = e => {\n    var left = e.outputBuffer.getChannelData(0);\n    var right = e.outputBuffer.getChannelData(1);\n    var size = left.length;\n\n    // We're going to buffer underrun. Attempt to fill the buffer.\n    if (this.buffer.size() < size * 2 && this.onBufferUnderrun) {\n      this.onBufferUnderrun(this.buffer.size(), size * 2);\n    }\n\n    try {\n      var samples = this.buffer.deqN(size * 2);\n    } catch (e) {\n      // onBufferUnderrun failed to fill the buffer, so handle a real buffer\n      // underrun\n\n      // ignore empty buffers... assume audio has just stopped\n      var bufferSize = this.buffer.size() / 2;\n      if (bufferSize > 0) {\n        console.log(`Buffer underrun (needed ${size}, got ${bufferSize})`);\n      }\n      for (var j = 0; j < size; j++) {\n        left[j] = 0;\n        right[j] = 0;\n      }\n      return;\n    }\n    for (var i = 0; i < size; i++) {\n      left[i] = samples[i * 2];\n      right[i] = samples[i * 2 + 1];\n    }\n  };\n}\n","import Raven from \"raven-js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NES } from \"jsnes\";\n\nimport FrameTimer from \"./FrameTimer\";\nimport GamepadController from \"./GamepadController\";\nimport KeyboardController from \"./KeyboardController\";\nimport Screen from \"./Screen\";\nimport Speakers from \"./Speakers\";\n\n/*\n * Runs the emulator.\n *\n * The only UI is a canvas element. It assumes it is a singleton in various ways\n * (binds to window, keyboard, speakers, etc).\n */\nclass Emulator extends Component {\n  render() {\n    return (\n      <Screen\n        ref={screen => {\n          this.screen = screen;\n        }}\n        onGenerateFrame={() => {\n          this.nes.frame();\n        }}\n        onMouseDown={(x, y) => {\n          this.nes.zapperMove(x, y);\n          this.nes.zapperFireDown();\n        }}\n        onMouseUp={() => {\n          this.nes.zapperFireUp();\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    // Initial layout\n    this.fitInParent();\n\n    this.speakers = new Speakers({\n      onBufferUnderrun: (actualSize, desiredSize) => {\n        if (this.props.paused) {\n          return;\n        }\n        // Skip a video frame so audio remains consistent. This happens for\n        // a variety of reasons:\n        // - Frame rate is not quite 60fps, so sometimes buffer empties\n        // - Page is not visible, so requestAnimationFrame doesn't get fired.\n        //   In this case emulator still runs at full speed, but timing is\n        //   done by audio instead of requestAnimationFrame.\n        // - System can't run emulator at full speed. In this case it'll stop\n        //    firing requestAnimationFrame.\n        console.log(\n          \"Buffer underrun, running another frame to try and catch up\"\n        );\n\n        this.nes.frame();\n        // desiredSize will be 2048, and the NES produces 1468 samples on each\n        // frame so we might need a second frame to be run. Give up after that\n        // though -- the system is not catching up\n        if (this.speakers.buffer.size() < desiredSize) {\n          console.log(\"Still buffer underrun, running a second frame\");\n          this.nes.frame();\n        }\n      }\n    });\n\n    this.nes = new NES({\n      onFrame: this.screen.setBuffer,\n      onStatusUpdate: console.log,\n      onAudioSample: this.speakers.writeSample\n    });\n\n    // For debugging. ([\"nes\"] instead of .nes to avoid VS Code type errors.)\n    window[\"nes\"] = this.nes;\n\n    this.frameTimer = new FrameTimer({\n      onGenerateFrame: Raven.wrap(this.nes.frame),\n      onWriteFrame: Raven.wrap(this.screen.writeBuffer)\n    });\n\n    // Set up gamepad and keyboard\n    this.gamepadController = new GamepadController({\n      onButtonDown: this.nes.buttonDown,\n      onButtonUp: this.nes.buttonUp\n    });\n\n    this.gamepadController.loadGamepadConfig();\n    this.gamepadPolling = this.gamepadController.startPolling();\n\n    this.keyboardController = new KeyboardController({\n      onButtonDown: this.gamepadController.disableIfGamepadEnabled(\n        this.nes.buttonDown\n      ),\n      onButtonUp: this.gamepadController.disableIfGamepadEnabled(\n        this.nes.buttonUp\n      )\n    });\n\n    // Load keys from localStorage (if they exist)\n    this.keyboardController.loadKeys();\n\n    document.addEventListener(\"keydown\", this.keyboardController.handleKeyDown);\n    document.addEventListener(\"keyup\", this.keyboardController.handleKeyUp);\n    document.addEventListener(\n      \"keypress\",\n      this.keyboardController.handleKeyPress\n    );\n\n    this.nes.loadROM(this.props.romData);\n    this.start();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n\n    // Unbind keyboard\n    document.removeEventListener(\n      \"keydown\",\n      this.keyboardController.handleKeyDown\n    );\n    document.removeEventListener(\"keyup\", this.keyboardController.handleKeyUp);\n    document.removeEventListener(\n      \"keypress\",\n      this.keyboardController.handleKeyPress\n    );\n\n    // Stop gamepad\n    this.gamepadPolling.stop();\n\n    window[\"nes\"] = undefined;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.paused !== prevProps.paused) {\n      if (this.props.paused) {\n        this.stop();\n      } else {\n        this.start();\n      }\n    }\n\n    // TODO: handle changing romData\n  }\n\n  start = () => {\n    this.frameTimer.start();\n    this.speakers.start();\n    this.fpsInterval = setInterval(() => {\n      console.log(`FPS: ${this.nes.getFPS()}`);\n    }, 1000);\n  };\n\n  stop = () => {\n    this.frameTimer.stop();\n    this.speakers.stop();\n    clearInterval(this.fpsInterval);\n  };\n\n  /*\n   * Fill parent element with screen. Typically called if parent element changes size.\n   */\n  fitInParent() {\n    this.screen.fitInParent();\n  }\n}\n\nEmulator.propTypes = {\n  paused: PropTypes.bool,\n  romData: PropTypes.string.isRequired\n};\n\nexport default Emulator;\n","import React, { Component } from \"react\";\nimport { Button, Progress } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport config from \"./config\";\nimport ControlsModal from \"./ControlsModal\";\nimport Emulator from \"./Emulator\";\nimport RomLibrary from \"./RomLibrary\";\n\nimport \"./RunPage.css\";\n\nfunction loadBinary(path, callback, handleProgress) {\n  var req = new XMLHttpRequest();\n  req.open(\"GET\", path);\n  req.overrideMimeType(\"text/plain; charset=x-user-defined\");\n  req.onload = function() {\n    if (this.status === 200) {\n      if (req.responseText.match(/^<!doctype html>/i)) {\n        // Got HTML back, so it is probably falling back to index.html due to 404\n        return callback(new Error(\"Page not found\"));\n      }\n\n      callback(null, this.responseText);\n    } else if (this.status === 0) {\n      // Aborted, so ignore error\n    } else {\n      callback(new Error(req.statusText));\n    }\n  };\n  req.onerror = function() {\n    callback(new Error(req.statusText));\n  };\n  req.onprogress = handleProgress;\n  req.send();\n  return req;\n}\n\n/*\n * The UI for the emulator. Also responsible for loading ROM from URL or file.\n */\nclass RunPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      romName: null,\n      romData: null,\n      running: false,\n      paused: false,\n      controlsModalOpen: false,\n      loading: true,\n      loadedPercent: 3,\n      error: null\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"RunPage\">\n        <nav\n          className=\"navbar navbar-expand\"\n          ref={el => {\n            this.navbar = el;\n          }}\n        >\n          <ul className=\"navbar-nav\" style={{ width: \"200px\" }}>\n            <li className=\"navitem\">\n              <Link to=\"/\" className=\"nav-link\">\n                &lsaquo; Back\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav ml-auto mr-auto\">\n            <li className=\"navitem\">\n              <span className=\"navbar-text mr-3\">{this.state.romName}</span>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav\" style={{ width: \"200px\" }}>\n            <li className=\"navitem\">\n              <Button\n                outline\n                color=\"primary\"\n                onClick={this.toggleControlsModal}\n                className=\"mr-3\"\n              >\n                Controls\n              </Button>\n              <Button\n                outline\n                color=\"primary\"\n                onClick={this.handlePauseResume}\n                disabled={!this.state.running}\n              >\n                {this.state.paused ? \"Resume\" : \"Pause\"}\n              </Button>\n            </li>\n          </ul>\n        </nav>\n\n        {this.state.error ? (\n          this.state.error\n        ) : (\n          <div\n            className=\"screen-container\"\n            ref={el => {\n              this.screenContainer = el;\n            }}\n          >\n            {this.state.loading ? (\n              <Progress\n                value={this.state.loadedPercent}\n                style={{\n                  position: \"absolute\",\n                  width: \"70%\",\n                  left: \"15%\",\n                  top: \"48%\"\n                }}\n              />\n            ) : this.state.romData ? (\n              <Emulator\n                romData={this.state.romData}\n                paused={this.state.paused}\n                ref={emulator => {\n                  this.emulator = emulator;\n                }}\n              />\n            ) : null}\n\n            {/* TODO: lift keyboard and gamepad state up */}\n            {this.state.controlsModalOpen && (\n              <ControlsModal\n                isOpen={this.state.controlsModalOpen}\n                toggle={this.toggleControlsModal}\n                keys={this.emulator.keyboardController.keys}\n                setKeys={this.emulator.keyboardController.setKeys}\n                promptButton={this.emulator.gamepadController.promptButton}\n                gamepadConfig={this.emulator.gamepadController.gamepadConfig}\n                setGamepadConfig={\n                  this.emulator.gamepadController.setGamepadConfig\n                }\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.layout);\n    this.layout();\n    this.load();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.layout);\n    if (this.currentRequest) {\n      this.currentRequest.abort();\n    }\n  }\n\n  load = () => {\n    if (this.props.match.params.slug) {\n      const slug = this.props.match.params.slug;\n      const isLocalROM = /^local-/.test(slug);\n      const romHash = slug.split(\"-\")[1];\n      const romInfo = isLocalROM\n        ? RomLibrary.getRomInfoByHash(romHash)\n        : config.ROMS[slug];\n\n      if (!romInfo) {\n        this.setState({ error: `No such ROM: ${slug}` });\n        return;\n      }\n\n      if (isLocalROM) {\n        this.setState({ romName: romInfo.name });\n        const localROMData = localStorage.getItem(\"blob-\" + romHash);\n        this.handleLoaded(localROMData);\n      } else {\n        this.setState({ romName: romInfo.description });\n        this.currentRequest = loadBinary(\n          romInfo.url,\n          (err, data) => {\n            if (err) {\n              this.setState({ error: `Error loading ROM: ${err.message}` });\n            } else {\n              this.handleLoaded(data);\n            }\n          },\n          this.handleProgress\n        );\n      }\n    } else if (this.props.location.state && this.props.location.state.file) {\n      let reader = new FileReader();\n      reader.readAsBinaryString(this.props.location.state.file);\n      reader.onload = e => {\n        this.currentRequest = null;\n        this.handleLoaded(reader.result);\n      };\n    } else {\n      this.setState({ error: \"No ROM provided\" });\n    }\n  };\n\n  handleProgress = e => {\n    if (e.lengthComputable) {\n      this.setState({ loadedPercent: (e.loaded / e.total) * 100 });\n    }\n  };\n\n  handleLoaded = data => {\n    this.setState({ running: true, loading: false, romData: data });\n  };\n\n  handlePauseResume = () => {\n    this.setState({ paused: !this.state.paused });\n  };\n\n  layout = () => {\n    let navbarHeight = parseFloat(window.getComputedStyle(this.navbar).height);\n    this.screenContainer.style.height = `${window.innerHeight -\n      navbarHeight}px`;\n    if (this.emulator) {\n      this.emulator.fitInParent();\n    }\n  };\n\n  toggleControlsModal = () => {\n    this.setState({ controlsModalOpen: !this.state.controlsModalOpen });\n  };\n}\n\nexport default RunPage;\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport ListPage from \"./ListPage\";\nimport RunPage from \"./RunPage\";\nimport config from \"./config\";\nimport { handleError } from \"./utils\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n    if (config.GOOGLE_ANALYTICS_CODE) {\n      GoogleAnalytics.initialize(config.GOOGLE_ANALYTICS_CODE);\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div className=\"container my-4\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n              Oops - there has been an error. It has been logged to the console.\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={ListPage} />\n          <Route exact path=\"/run\" component={RunPage} />\n          <Route exact path=\"/run/:slug\" component={RunPage} />\n          <Route path=\"/\" render={this.recordPageview} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({ error });\n    handleError(error, errorInfo);\n  }\n\n  recordPageview = ({ location }) => {\n    GoogleAnalytics.pageview(location.pathname);\n    return null;\n  };\n}\n\nexport default App;\n","import Raven from \"raven-js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport config from \"./config\";\nimport \"./index.scss\";\n\nif (config.SENTRY_URI) {\n  Raven.config(config.SENTRY_URI).install();\n}\n\nRaven.context(function() {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n});\n"],"sourceRoot":""}